name: Fooman M2 CI-CD

on: push

jobs:
    integration:
        name: Integration Testing
        runs-on: ubuntu-latest
        container:
            image: extdn/magento-integration-tests-action:7.3-latest
            env:
                ENABLE_SENDMAIL: true

        services:
            mysql:
                image: docker.io/wardenenv/mysql:5.7
                env:
                    MYSQL_ROOT_PASSWORD: 123123q
                    MYSQL_DATABASE: magento_integration_tests
                ports:
                    - 3306
                options: >-
                    --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
                    --mount type=tmpfs,destination=/var/lib/mysql
            es:
                image: docker.io/wardenenv/elasticsearch:7.8
                ports:
                    - 9200
                env:
                    'discovery.type': single-node
                    'xpack.security.enabled': false
                    ES_JAVA_OPTS: "-Xms64m -Xmx512m"
                options: --health-cmd="curl localhost:9200/_cluster/health?wait_for_status=yellow&timeout=60s" --health-interval=10s --health-timeout=5s --health-retries=3
            rabbitmq:
                image: docker.io/wardenenv/rabbitmq:3.7
                ports:
                    - 5672
                options: --health-cmd "rabbitmqctl node_health_check" --health-interval 10s --health-timeout 5s --health-retries 5
        steps:
            -   uses: actions/checkout@v2
                name: Checkout files

            -   name: Get composer cache directory
                id: composer-cache
                run: "echo \"::set-output name=dir::$(composer config cache-dir)\""

            -   name: Cache dependencies
                uses: actions/cache@v1
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Setup Composer Access
                run: composer config -a -g http-basic.repo.magento.com ${{ secrets.REPO_MAGENTO_USERNAME }} ${{ secrets.REPO_MAGENTO_PASSWORD }}

            -   name: Composer install
                run: composer install --no-interaction --no-progress --no-suggest

            -   name: Run Checkout Integration Tests
                if: github.ref == 'refs/heads/master'
                run: cd dev/tests/integration && $GITHUB_WORKSPACE/vendor/bin/phpunit -c $GITHUB_WORKSPACE/dev/tests/integration/phpunit.stage.xml

            -   name: Run Subset of Integration Tests including Checkout
                if: startsWith(github.ref, 'refs/tags/')
                run: cd dev/tests/integration && $GITHUB_WORKSPACE/vendor/bin/phpunit -c $GITHUB_WORKSPACE/dev/tests/integration/phpunit.prod.xml

    deploy-to-staging:
        name: Deploy to Staging
        runs-on: ubuntu-latest
        needs: [integration]
        if: github.ref == 'refs/heads/master'
        steps:
            -   uses: actions/checkout@v2
                name: Checkout files

            -   name: Setup PHP
                uses: shivammathur/setup-php@master
                with:
                    php-version: 7.3
                    extensions: bcmath, ctype, curl, dom, gd, hash, iconv, intl, mbstring, openssl, pdo_mysql, simplexml, soap, xsl, zip

            -   name: Get composer cache directory
                id: composer-cache
                run: "echo \"::set-output name=dir::$(composer config cache-dir)\""

            -   name: Cache dependencies
                uses: actions/cache@v1
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Composer stay 1.x
                run: sudo composer self-update 1.10.17

            -   name: Setup Composer Access
                run: composer config -a -g http-basic.repo.magento.com ${{ secrets.REPO_MAGENTO_USERNAME }} ${{ secrets.REPO_MAGENTO_PASSWORD }}

            -   name: Composer install
                run: composer install --no-interaction --no-progress --no-suggest

            -   name: Setup Deployer
                uses: atymic/deployer-php-action@master
                with:
                    ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
                    ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

            -   name: Build deployment artifact
                run: dep build

            -   name: Deploy Artifact to Staging
                run: dep deploy-artifact stage -vv

    deploy-to-prod:
        name: Deploy to Production
        runs-on: ubuntu-latest
        needs: [integration]
        if: startsWith(github.ref, 'refs/tags/')
        steps:
            -   uses: actions/checkout@v2
                name: Checkout files

            -   name: Setup PHP
                uses: shivammathur/setup-php@master
                with:
                    php-version: 7.3
                    extensions: bcmath, ctype, curl, dom, gd, hash, iconv, intl, mbstring, openssl, pdo_mysql, simplexml, soap, xsl, zip

            -   name: Get composer cache directory
                id: composer-cache
                run: "echo \"::set-output name=dir::$(composer config cache-dir)\""

            -   name: Cache dependencies
                uses: actions/cache@v1
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Composer stay 1.x
                run: sudo composer self-update 1.10.17

            -   name: Setup Composer Access
                run: composer config -a -g http-basic.repo.magento.com ${{ secrets.REPO_MAGENTO_USERNAME }} ${{ secrets.REPO_MAGENTO_PASSWORD }}

            -   name: Composer install
                run: composer install --no-interaction --no-progress --no-suggest

            -   name: Setup Deployer
                uses: atymic/deployer-php-action@master
                with:
                    ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
                    ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

            -   name: Build deployment artifact
                run: dep build

            -   name: Deploy Artifact to Production
                run: dep deploy-artifact prod -vv
